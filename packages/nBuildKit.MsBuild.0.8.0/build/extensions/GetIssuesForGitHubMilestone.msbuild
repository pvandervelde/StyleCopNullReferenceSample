<!--
     Copyright 2013 nBuildKit. Licensed under the Apache License, Version 2.0.
-->

<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003'
         ToolsVersion="4.0">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsExtensionsGetIssuesForGitHubMilestone>true</ExistsExtensionsGetIssuesForGitHubMilestone>

        <!--
            For MsBuild versions 4.0 through to 12.0 the tasks dll was in an assembly that contains the version in the file name.
            However starting with version 14 that is no longer the case so have to differentiate between these cases.
        -->
        <MsBuildTasksAssembly>$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll</MsBuildTasksAssembly>
        <MsBuildTasksAssembly Condition="!Exists('$(MsBuildTasksAssembly)')">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</MsBuildTasksAssembly>

        <MsBuildUtilitiesAssembly>$(MSBuildToolsPath)\Microsoft.Build.Utilities.v$(MSBuildToolsVersion).dll</MsBuildUtilitiesAssembly>
        <MsBuildUtilitiesAssembly Condition="!Exists('$(MsBuildUtilitiesAssembly)')">$(MSBuildToolsPath)\Microsoft.Build.Utilities.Core.dll</MsBuildUtilitiesAssembly>
    </PropertyGroup>

    <UsingTask TaskName="GetIssuesForGitHubMilestone"
               TaskFactory="CodeTaskFactory"
               AssemblyFile="$(MsBuildTasksAssembly)">
        <ParameterGroup>
            <GitHubUserName ParameterType="System.String" Required="true" />
            <GitHubProjectName ParameterType="System.String" Required="true" />
            <MilestoneName ParameterType="System.String" Required="true" />
            <IssueState ParameterType="System.String" Required="true" />
            <Issues ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Core" />
            <Reference Include="System.Runtime.Serialization" />
            <Reference Include="System.Xml" />
            <Reference Include="$(MSBuildToolsPath)\Microsoft.Build.Framework.dll"/>
            <Reference Include="$(MsBuildUtilitiesAssembly)"/>
            <Code Type="Class" Language="cs">
                <![CDATA[
                    using System;
                    using System.Collections.Generic;
                    using System.IO;
                    using System.Linq;
                    using System.Net;
                    using System.Runtime.Serialization;
                    using System.Runtime.Serialization.Json;
                    using System.Text;
                    using Microsoft.Build.Framework;
                    using Microsoft.Build.Utilities;

                    public sealed class GetIssuesForGitHubMilestone : Microsoft.Build.Utilities.Task
                    {
                        const string MetadataTitleTag = "Title";
                        const string MetadataUrlTag = "Url";
                        const string MetadataStateTag = "State";
                        const string MetadataBodyTag = "Body";
                        const string MetadataUserNameTag = "UserName";
                        const string MetadataUserUrlTag = "UserUrl";
                        const string MetadataLabelsTag = "Labels";

                        [Microsoft.Build.Framework.Required]
                        public string GitHubUserName
                        {
                            get;
                            set;
                        }

                        [Microsoft.Build.Framework.Required]
                        public string GitHubProjectName
                        {
                            get;
                            set;
                        }

                        [Microsoft.Build.Framework.Required]
                        public string MilestoneName
                        {
                            get;
                            set;
                        }

                        [Microsoft.Build.Framework.Required]
                        public string IssueState
                        {
                            get;
                            set;
                        }

                        [Microsoft.Build.Framework.Output]
                        public Microsoft.Build.Framework.ITaskItem[] Issues
                        {
                            get;
                            set;
                        }

                        public override bool Execute()
                        {
                            var list = new System.Collections.Generic.SortedList<int, ITaskItem>();
                            try
                            {
                                Log.LogMessage(
                                            MessageImportance.Low,
                                            string.Format(
                                                "Searching for milestone with title: {0}. ",
                                                MilestoneName));

                                var milestone = GetMilestone(MilestoneName);
                                if (milestone != null)
                                {
                                    Log.LogMessage(
                                            MessageImportance.Low,
                                            string.Format(
                                                "Getting issues for milestone [{0}] - {1}. ",
                                                milestone.number,
                                                milestone.title));

                                    var issues = GetIssuesForMilestone(milestone);
                                    foreach(var issue in issues)
                                    {
                                        if (!list.ContainsKey(issue.number))
                                        {
                                            var newItem = new TaskItem(issue.number.ToString());

                                            newItem.SetMetadata(MetadataTitleTag, issue.title);
                                            newItem.SetMetadata(MetadataUrlTag, issue.url);
                                            newItem.SetMetadata(MetadataStateTag, issue.state);
                                            newItem.SetMetadata(MetadataBodyTag, issue.body);
                                            newItem.SetMetadata(MetadataUserNameTag, issue.assignee != null ? issue.assignee.login : string.Empty);
                                            newItem.SetMetadata(MetadataUserUrlTag, issue.assignee != null ? issue.assignee.url : string.Empty);
                                            newItem.SetMetadata(MetadataLabelsTag, string.Join(";", issue.labels.Select(l => l.name)));

                                            list.Add(issue.number, newItem);
                                        }
                                    }
                                }
                                else
                                {
                                    Log.LogError(
                                        string.Format(
                                            "Failed to find a milestone with title: {0}",
                                            MilestoneName));
                                }
                            }
                            catch(Exception e)
                            {
                                Log.LogError(string.Format(
                                    "Failed to gather the issues for the given milestone on GitHub. Exception was: {0}",
                                    e));
                            }

                            Issues = list.Values.ToArray();

                            // Log.HasLoggedErrors is true if the task logged any errors -- even if they were logged
                            // from a task's constructor or property setter. As long as this task is written to always log an error
                            // when it fails, we can reliably return HasLoggedErrors.
                            return !Log.HasLoggedErrors;
                        }

                        private string GitHubApiUri()
                        {
                            return string.Format(
                                    "https://api.github.com/repos/{0}/{1}",
                                    GitHubUserName,
                                    GitHubProjectName);
                        }

                        private static WebClient CreateWebClient()
                        {
                            var userAgent = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2;)";

                            var client = new WebClient();
                            client.Headers.Clear();
                            client.Headers.Add("user-agent", userAgent);
                            client.Headers["accept"] = "application/vnd.github.v3+json";

                            return client;
                        }

                        private Milestone GetMilestone(string name)
                        {
                            Milestone milestone = null;
                            using (var client = CreateWebClient())
                            {
                                var uri = string.Format(
                                    "{0}/milestones",
                                    GitHubApiUri());

                                Log.LogMessage(
                                    MessageImportance.Low,
                                    string.Format(
                                        "Getting milestone information from: {0}. ",
                                        uri));

                                var content = client.DownloadString(uri);
                                var serializer = new DataContractJsonSerializer(typeof(List<Milestone>));

                                List<Milestone> milestones = null;
                                using (var ms = new MemoryStream(Encoding.Unicode.GetBytes(content)))
                                {
                                    milestones = (List<Milestone>)serializer.ReadObject(ms);
                                }

                                milestone = milestones.Find(m => m.title != null && m.title.Equals(name));
                            }

                            return milestone;
                        }

                        private List<Issue> GetIssuesForMilestone(Milestone milestone)
                        {
                            List<Issue> issues = null;
                            using (var client = CreateWebClient())
                            {
                                var state = string.Empty;
                                switch(IssueState)
                                {
                                    case "open":
                                        state = "&state=open";
                                        break;
                                    case "closed":
                                        state = "&state=closed";
                                        break;
                                    default:
                                        state = "&state=all";
                                        break;
                                }

                                var uri = string.Format(
                                    "{0}/issues?milestone={1}{2}",
                                    GitHubApiUri(),
                                    milestone.number,
                                    state);

                                Log.LogMessage(
                                    MessageImportance.Low,
                                    string.Format(
                                        "Getting issue information from: {0}. ",
                                        uri));

                                var content = client.DownloadString(uri);
                                var serializer = new DataContractJsonSerializer(typeof(List<Issue>));

                                using (var ms = new MemoryStream(Encoding.Unicode.GetBytes(content)))
                                {
                                    issues = (List<Issue>)serializer.ReadObject(ms);
                                }
                            }

                            return issues;
                        }

                        [DataContract]
                        public sealed class Creator
                        {
                            [DataMember]
                            public string login
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string avatar_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gravatar_id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string html_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string followers_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string following_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gists_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string starred_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string subscriptions_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string organizations_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string repos_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string received_events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string type
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public bool site_admin
                            {
                                get;
                                set;
                            }
                        }

                        [DataContract]
                        public sealed class User
                        {
                            [DataMember]
                            public string login
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string avatar_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gravatar_id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string html_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string followers_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string following_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gists_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string starred_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string subscriptions_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string organizations_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string repos_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string received_events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string type
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public bool site_admin
                            {
                                get;
                                set;
                            }
                        }

                        [DataContract]
                        public sealed class Label
                        {
                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string name
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string color
                            {
                                get;
                                set;
                            }
                        }

                        [DataContract]
                        public sealed class Assignee
                        {
                            [DataMember]
                            public string login
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string avatar_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gravatar_id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string html_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string followers_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string following_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string gists_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string starred_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string subscriptions_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string organizations_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string repos_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string received_events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string type
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public bool site_admin
                            {
                                get;
                                set;
                            }
                        }

                        [DataContract]
                        public sealed class Milestone
                        {
                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string html_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string labels_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int number
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string title
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string description
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public Creator creator
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int open_issues
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int closed_issues
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string state
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string created_at
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string updated_at
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public object due_on
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public object closed_at
                            {
                                get;
                                set;
                            }
                        }

                        [DataContract]
                        public sealed class Issue
                        {
                            [DataMember]
                            public string url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string repository_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string labels_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string comments_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string events_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string html_url
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int id
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int number
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string title
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public User user
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public List<Label> labels
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string state
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public bool locked
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public Assignee assignee
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public Milestone milestone
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public int comments
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string created_at
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string updated_at
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string closed_at
                            {
                                get;
                                set;
                            }

                            [DataMember]
                            public string body
                            {
                                get;
                                set;
                            }
                        }
                    }
                ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>