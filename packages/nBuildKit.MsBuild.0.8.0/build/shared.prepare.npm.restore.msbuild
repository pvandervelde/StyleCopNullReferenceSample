<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Shared_Prepare_Npm_Restore_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedPrepareNpmRestore>true</ExistsSharedPrepareNpmRestore>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props') AND '$(ExistsSharedImportSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\InvokeNodeTool.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\InvokeNodeTool.msbuild') AND '$(ExistsExtensionsInvokeNodeTool)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild') AND '$(ExistsExtensionsNuGetInstall)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolPath)' != 'true' " />

    <Target Name="nBuildKit_Shared_Prepare_Npm_Restore_Run"
            DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_Npm_Restore_Packages" />
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_Npm_Restore_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the build output is located at:           $(DirBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="Npm command line executable is located at:                         $(ToolsExternalNpmPath)"
                 Importance="low"/>
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo"
            DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DebugLog">
        <Message Text="Restoring NPM packages ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths"
            Condition=" '$(ToolsExternalNodeJsPath)' == 'UNDEFINED' OR '$(ToolsExternalNpmPath)' == 'UNDEFINED' ">
        <NuGetInstall NuGetPath="$(ToolsExternalNuGetPath)"
                      PackageName="Node.js"
                      PackageVersion="$(ToolsExternalNodeJsVersion)"
                      PackageDirectory="$(DirPackages)"
                      Sources="@(NuGetSources)"
                      Condition=" '$(ToolsExternalNodeJsPath)' == 'UNDEFINED' "/>
        <SearchPackagesDirectoryForToolPath PackagesDir="$(DirPackages)"
                                            FileToLocate="node.exe"
                                            Condition=" '$(ToolsExternalNodeJsPath)' == 'UNDEFINED' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalNodeJsPath" />
        </SearchPackagesDirectoryForToolPath>
        <Message Text="The node.js executable was found at: $(ToolsExternalNodeJsPath)"
                 Importance="low"
                 Condition="Exists('$(ToolsExternalNodeJsPath)') AND '$(ShouldExecute)' == 'true' " />

        <Error Text="Could not locate the Node.js executable path. Cannot execute any of the node.js tools."
               Condition="!Exists('$(ToolsExternalNodeJsPath)') AND '$(ShouldExecute)' == 'true' "/>

        <NuGetInstall NuGetPath="$(ToolsExternalNuGetPath)"
                      PackageName="Python.Runtime"
                      PackageVersion="$(ToolsExternalPythonVersion)"
                      PackageDirectory="$(DirPackages)"
                      Sources="@(NuGetSources)"
                      Condition=" '$(ToolsExternalPythonPath)' == 'UNDEFINED' "/>
        <SearchPackagesDirectoryForToolPath PackagesDir="$(DirPackages)"
                                            FileToLocate="python.exe"
                                            Condition=" '$(ToolsExternalPythonPath)' == 'UNDEFINED' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalPythonPath" />
        </SearchPackagesDirectoryForToolPath>
        <Message Text="The python executable was found at: $(ToolsExternalPythonPath)"
                 Importance="low"
                 Condition="Exists('$(ToolsExternalPythonPath)') AND '$(ShouldExecute)' == 'true' " />

        <Warning Text="Could not locate the python executable path. It is not possible to invoke python scripts. This may fail the NPM restore process."
                 Condition="!Exists('$(ToolsExternalPythonPath)') AND '$(ShouldExecute)' == 'true' "/>

        <NuGetInstall NuGetPath="$(ToolsExternalNuGetPath)"
                      PackageName="Npm"
                      PackageVersion="$(ToolsExternalNpmVersion)"
                      PackageDirectory="$(DirPackages)"
                      Sources="@(NuGetSources)"
                      Condition=" '$(ToolsExternalNpmPath)' == 'UNDEFINED' "/>
        <SearchPackagesDirectoryForToolPath PackagesDir="$(DirPackages)"
                                            FileToLocate="npm-cli.js"
                                            Condition=" '$(ToolsExternalNpmPath)' == 'UNDEFINED' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalNpmPath" />
        </SearchPackagesDirectoryForToolPath>
        <Message Text="The npm executable was found at: $(ToolsExternalNpmPath)"
                 Importance="low"
                 Condition="Exists('$(ToolsExternalNpmPath)') AND '$(ShouldExecute)' == 'true' " />

        <Error Text="Could not locate the Npm executable path. Cannot restore the Node.js packages."
               Condition="!Exists('$(ToolsExternalNpmPath)') AND '$(ShouldExecute)' == 'true' "/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_Npm_Restore_Packages"
            DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo;_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths">
        <Error Text="No NPM executable defined. Will not be able to restore the packages."
               Condition=" '$(ToolsExternalNpmPath)' == '' AND '$(ShouldExecute)' == 'true' " />

        <ItemGroup>
            <NpmPackageFiles Include="$(DirWorkspace)\**\package.json"
                             Exclude="$(DirBuild)\**\package.json;$(DirWorkspace)\**\bin\**\package.json;$(DirWorkspace)\**\obj\**\package.json;$(DirWorkspace)\**\bower_components\**\package.json;$(DirWorkspace)\**\node_modules\**\package.json" />
        </ItemGroup>

        <Message Text="No NPM package configuration files found to restore packages from."
                 Importance="low"
                 Condition=" '@(NpmPackageFiles)' == '' " />

        <CreateProperty Value="$(ToolsExternalNpmPath)"
                        Condition="!$(ToolsExternalNpmPath.EndsWith('npm-cli.js'))">
            <Output TaskParameter="Value" PropertyName="ToolsExternalNpmInvocation" />
        </CreateProperty>
        <CreateProperty Value="&quot;&quot; &quot;&quot;"
                        Condition="$(ToolsExternalNpmPath.EndsWith('npm-cli.js'))">
            <Output TaskParameter="Value" PropertyName="ToolsExternalNpmInvocation" />
        </CreateProperty>

        <ItemGroup>
            <AdditionalEnvironmentPaths Include="$([System.IO.Path]::GetDirectoryName('$(ToolsExternalPythonPath)'))" />
        </ItemGroup>
        <InvokeNodeTool NodeExecutablePath="$(ToolsExternalNodeJsPath)"
                        AdditionalEnvironmentPaths="@(AdditionalEnvironmentPaths)"
                        ToolPath="$(ToolsExternalNpmPath)"
                        Arguments="install $([System.IO.Path]::GetDirectoryName('%(NpmPackageFiles.FullPath)'))"
                        WorkingDirectory="%(NpmPackageFiles.RootDir)%(NpmPackageFiles.Directory)"
                        IgnoreErrors="true"
                        IgnoreExitCode="false"
                        Condition=" '@(NpmPackageFiles)' != '' "/>
    </Target>
 </Project>