<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Build_Prepare_UpdateAssemblyInfo_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildPrepareGenerateLicenses>true</ExistsBuildPrepareGenerateLicenses>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\AddOrUpdateAttributeInCode.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\AddOrUpdateAttributeInCode.msbuild') AND '$(ExistsExtensionsAddOrUpdateAttributeInCode)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\GenerateInternalsVisibleToAttributes.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GenerateInternalsVisibleToAttributes.msbuild') AND '$(ExistsExtensionsGenerateInternalsVisibleToAttributes)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild') AND '$(ExistsExtensionsTemplateFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\UpdateAttributeInCode.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\UpdateAttributeInCode.msbuild') AND '$(ExistsExtensionsUpdateAttributeInCode)' != 'true' " />

    <Target Name="nBuildKit_Build_Prepare_UpdateAssemblyInfo_Run"
            DependsOnTargets="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_Update" />
        <CallTarget Targets="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_InternalsVisibleTo" />
    </Target>

    <Target Name="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Configuration values:"
                 Importance="low"/>
        <Message Text="ShouldClean:             $(ShouldClean)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the NuGet packages is located at:         $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the source code is located at:            $(DirSrc)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DisplayInfo"
            DependsOnTargets="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DebugLog">
        <Message Text="Updating AssemblyInfo files ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_Update"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize;_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DisplayInfo"
            Outputs="%(AssemblyInfoFilesToUpdate.Identity)"
            Condition=" '@(AssemblyInfoFilesToUpdate)' != '' ">
        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyVersion"
                                    Value="&quot;${VersionAssembly}&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyVersionInfo)' == 'true' "/>

        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyFileVersion"
                                    Value="&quot;${VersionAssemblyFile}&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyVersionInfo)' == 'true' "/>

        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyInformationalVersion"
                                    Value="&quot;${VersionProduct}&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyVersionInfo)' == 'true' "/>

        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyCompany"
                                    Value="&quot;$(CompanyName)&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyCompanyInfo)' == 'true' "/>

        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyCopyright"
                                    Value="&quot;$(CopyrightLong)&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyCompanyInfo)' == 'true' "/>

        <AddOrUpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                                    AttributeName="AssemblyConfiguration"
                                    Value="&quot;$(Configuration)&quot;"
                                    Encoding="UTF-8"
                                    Condition=" '$(ShouldGenerateAssemblyBuildInfo)' == 'true' "/>

        <UpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                               AttributeName="AssemblyBuildTime"
                               Value="buildTime: &quot;${Now}&quot;"
                               Encoding="UTF-8"
                               Condition=" '$(ShouldGenerateAssemblyBuildInfo)' == 'true' "/>

        <UpdateAttributeInCode InputFile="%(AssemblyInfoFilesToUpdate.Identity)"
                               AttributeName="AssemblyBuildInformation"
                               Value="buildNumber: $(VersionBuild), versionControlInformation: &quot;${VcsRevision}&quot;"
                               Encoding="UTF-8"
                               Condition=" '$(ShouldGenerateAssemblyBuildInfo)' == 'true' "/>

        <TemplateFile Template="%(AssemblyInfoFilesToUpdate.Identity)"
                      OutputFileName="%(AssemblyInfoFilesToUpdate.Identity)"
                      Tokens="@(TemplateTokens)"
                      Encoding="UTF-8"
                      Condition="Exists('%(AssemblyInfoFilesToUpdate.FullPath)') AND '$(ShouldGenerateAssemblyVersionInfo)' == 'true' "/>
    </Target>

    <Target Name="_nBuildKit_Build_Prepare_UpdateAssemblyInfo_InternalsVisibleTo"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize;_nBuildKit_Build_Prepare_UpdateAssemblyInfo_DisplayInfo"
            Outputs="%(AssemblyInfoFilesToUpdate.Identity)"
            Condition="  '@(AssemblyInfoFilesToUpdate)' != '' AND '@(InternalsVisibleTo)' != '' ">
        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('%(AssemblyInfoFilesToUpdate.Identity)'))">
            <Output TaskParameter="Value" PropertyName="AssemblyInfoDirectory" />
        </CreateProperty>
        <ItemGroup>
            <PossibleProjectFiles Include="$(AssemblyInfoDirectory)\**\*.csproj"
                                  Condition="!$(AssemblyInfoDirectory.EndsWith('Properties'))" />
            <PossibleProjectFiles Include="$(AssemblyInfoDirectory)\..\**\*.csproj"
                                  Condition="$(AssemblyInfoDirectory.EndsWith('Properties'))" />
            <PossibleProjectFiles Include="$(AssemblyInfoDirectory)\**\*.vbproj"
                                  Condition="!$(AssemblyInfoDirectory.EndsWith('My Project'))" />
            <PossibleProjectFiles Include="$(AssemblyInfoDirectory)\..\**\*.vbproj"
                                  Condition="$(AssemblyInfoDirectory.EndsWith('My Project'))" />
        </ItemGroup>
        <Error Text="Found multiple project files that may be referencing the AssemblyInfo file at: %(AssemblyInfoFilesToUpdate.Identity). The project files are: @(PossibleProjectFiles)"
               Condition="$([System.String]::new('@(PossibleProjectFiles)').Contains(';'))" />

        <CreateProperty Value="%(PossibleProjectFiles.FullPath)"
                        Condition=" '@(PossibleProjectFiles)' != '' AND !$([System.String]::new('@(PossibleProjectFiles)').Contains(';')) ">
            <Output TaskParameter="Value" PropertyName="ProjectFile" />
        </CreateProperty>
        <Error Text="Did not find a project file that references the AssemblyInfo file at: %(AssemblyInfoFilesToUpdate.Identity)"
               Condition="!Exists('$(ProjectFile)')" />
        <Message Text="The project file at $(ProjectFile) is referencing the AssemblyInfo file at: %(AssemblyInfoFilesToUpdate.Identity). Using the project file to determine the assembly name."
                 Condition="Exists('$(ProjectFile)')" />

        <XmlPeek XmlInputPath="$(ProjectFile)"
                 Namespaces="&lt;Namespace Prefix='x' Uri='http://schemas.microsoft.com/developer/msbuild/2003' /&gt;"
                 Query="/x:Project/x:PropertyGroup/x:AssemblyName/text()"
                 Condition="Exists('$(ProjectFile)')">
            <Output TaskParameter="Result" ItemName="AssemblyNames" />
        </XmlPeek>
        <CreateProperty Value="%(AssemblyNames.Identity)"
                        Condition=" '@(AssemblyNames)' != '' ">
            <Output TaskParameter="Value" PropertyName="AssemblyName" />
        </CreateProperty>

        <PropertyGroup>
            <InternalsVisibleToForSignedAssembliesTemplate>[assembly: InternalsVisibleTo(&quot;${AssemblyName}, PublicKey=${Key}&quot;)]</InternalsVisibleToForSignedAssembliesTemplate>
            <InternalsVisibleToForUnsignedAssembliesTemplate>[assembly: InternalsVisibleTo(&quot;${AssemblyName}&quot;)]</InternalsVisibleToForUnsignedAssembliesTemplate>
        </PropertyGroup>
        <GenerateInternalsVisibleToAttributes SnExe="$(ToolsExternalSnPath)"
                                              Project="$(AssemblyName)"
                                              AttributeTemplateForSignedAssemblies="$(InternalsVisibleToForSignedAssembliesTemplate)"
                                              AttributeTemplateForUnsignedAssemblies="$(InternalsVisibleToForUnsignedAssembliesTemplate)"
                                              DirPackages="$(DirPackages)"
                                              DirTemp="$(DirBuildTemp)"
                                              Items="@(InternalsVisibleTo)"
                                              Condition=" '@(InternalsVisibleTo)' != '' AND '$(AssemblyName)' != '' ">
            <Output TaskParameter="Result" PropertyName="InternalsVisibleToAttributes" />
        </GenerateInternalsVisibleToAttributes>

        <CreateItem
            Include="$(InternalsVisibletoCompilerConstants.Split(';'))"
            Condition=" '$(InternalsVisibletoCompilerConstants)' != '' AND '$(InternalsVisibleToAttributes)' != '' ">
           <Output
               TaskParameter="Include"
               ItemName="CompilerConstants"/>
        </CreateItem>

        <CreateProperty Value="@(CompilerConstants->'%(Identity)', ' || ')"
                        Condition=" '@(CompilerConstants)' != '' ">
            <Output TaskParameter="Value" PropertyName="CompilerConstantsCombined" />
        </CreateProperty>
        <ItemGroup Condition=" '$(InternalsVisibleToAttributes)' != '' ">
            <InternalsVisibleToLines Include="#if $(CompilerConstantsCombined)"
                                     Condition=" '$(CompilerConstantsCombined)' != '' " />
            <InternalsVisibleToLines Include="$(InternalsVisibleToAttributes)" />
            <InternalsVisibleToLines Include="#endif"
                                     Condition=" '$(CompilerConstantsCombined)' != '' " />
        </ItemGroup>

        <PropertyGroup>
            <CurrentFileContent>$([System.IO.File]::ReadAllText(%(AssemblyInfoFilesToUpdate.FullPath)))</CurrentFileContent>
            <HasInternalsVisibleToAttributes>$(CurrentFileContent.Contains('$InternalsVisibleToAttributes'))</HasInternalsVisibleToAttributes>
        </PropertyGroup>

        <WriteLinesToFile
            File="%(AssemblyInfoFilesToUpdate.FullPath)"
            Lines="@(InternalsVisibleToLines)"
            Overwrite="false"
            Condition=" '$(HasInternalsVisibleToAttributes)' != 'true' " />
    </Target>
 </Project>