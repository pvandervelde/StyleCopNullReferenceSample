<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Build_Analyze_Binaries_Moma_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildAnalyzeBinariesMoma>true</ExistsBuildAnalyzeBinariesMoma>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolPath)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_Build_Analyze_Binaries_Moma_Run"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_Moma_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Build_Analyze_Binaries_Moma_Analyze" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Build_Analyze_Binaries_Moma_DisplayInfo"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_Moma_DebugLog">
        <Message Text="Running MoMA ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_Moma_DebugLog"
            Condition="$(ShouldDisplayDebugLog)"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_Moma_ReplaceBuildTemplates">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)"
                 Importance="low"/>
        <Message Text="The directory containing the NuGet packages is located at:         $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="The MoMA report file is located at:                                $(FileReportMomaExpanded)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="MoMA command line executable is located at:                        $(ToolsExternalMomaPath)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_Moma_ReplaceBuildTemplates"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <Message Text="Resolving build templates for: $(FileReportMoma)"
                 Importance="low"/>

        <TemplateText Template="$(FileReportMoma)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="FileReportMomaExpanded" />
        </TemplateText>
    </Target>

    <PropertyGroup>
        <FileMomaExe>MoMA.exe</FileMomaExe>
    </PropertyGroup>
    <Target Name="_nBuildKit_Build_Analyze_Binaries_Moma_Analyze"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_Moma_ReplaceBuildTemplates">
        <Error Text="The packages directory does not exist. Cannot search for the MoMA executable."
               Condition="!Exists('$(DirPackages)') AND '$(ShouldExecute)' == 'true' "/>

        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileReportMomaExpanded)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <!-- Create the temp dir because that's where MoMA will drop it's temp files. -->
        <MakeDir Directories="$(DirBuildTemp)"
                 Condition="!Exists('$(DirBuildTemp)') AND '$(ShouldExecute)' == 'true' " />

        <SearchPackagesDirectoryForToolPath PackagesDir="$(DirPackages)"
                                            FileToLocate="$(FileMomaExe)"
                                            Condition=" '$(ToolsExternalMomaPath)' == 'UNDEFINED' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalMomaPath" />
        </SearchPackagesDirectoryForToolPath>
        <Message Text="The MoMA executable was found at: $(ToolsExternalMomaPath)"
                 Importance="low"
                 Condition="Exists('$(ToolsExternalMomaPath)') AND '$(ShouldExecute)' == 'true' " />
        <Error Text="Could not locate the MoMA executable path. Cannot execute analysis of binaries."
               Condition="!Exists('$(ToolsExternalMomaPath)') AND '$(ShouldExecute)' == 'true' "/>

        <Exec Command="$(ToolsExternalMomaPath) --nogui --out &quot;$(FileReportMomaExpanded)&quot; @(MomaFiles->'%22%(FullPath)%22', ' ')"
              WorkingDirectory="$(DirBuildTemp)"
              Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>