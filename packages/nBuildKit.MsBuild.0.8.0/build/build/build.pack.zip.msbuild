<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Build_Pack_Zip_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildPackZip>true</ExistsBuildPackZip>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild') AND '$(ExistsExtensionsTemplateFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\Zip.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\Zip.msbuild') AND '$(ExistsExtensionsZip)' != 'true' "/>

    <Target Name="nBuildKit_Build_Pack_Zip_Run"
            DependsOnTargets="_nBuildKit_Build_Pack_Zip_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Build_Pack_Zip_Pack" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Build_Pack_Zip_DisplayInfo"
            DependsOnTargets="_nBuildKit_Build_Pack_Zip_DebugLog">
        <Message Text="Packing binaries ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Build_Pack_Zip_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Build_Pack_Zip_Pack"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize"
            Condition=" '@(ArchivePackageSpecs)' != '' "
            Outputs="%(ArchivePackageSpecs.Identity)">
        <Message Text="Resolving build templates for: %(ArchivePackageSpecs.Identity)"
                 Importance="low"/>

        <MakeDir Directories="$(DirBuildDeploy)"
                 Condition="!Exists('$(DirBuildDeploy)') AND  '$(ShouldExecute)' == 'true' " />

        <TemplateText Template="%(ArchivePackageSpecs.Identity)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="FileArchiveSpec" />
        </TemplateText>

        <CreateProperty Value="$([System.IO.Path]::GetFileName('$(FileArchiveSpec)'))" >
            <Output TaskParameter="Value" PropertyName="FileNameArchiveSpec" />
        </CreateProperty>
        <CreateProperty Value="$(DirBuildTemp)\$(FileNameArchiveSpec)" >
            <Output TaskParameter="Value" PropertyName="FileGeneratedArchiveSpec" />
        </CreateProperty>

        <TemplateFile Template="$(FileArchiveSpec)"
                      OutputFileName="$(FileGeneratedArchiveSpec)"
                      Tokens="@(TemplateTokens)"
                      Encoding="UTF-8"
                      Condition=" '$(ShouldExecute)' == 'true' "/>

        <Zip File="$(FileGeneratedArchiveSpec)"
             OutputDirectory="$(DirBuildDeploy)"
             OverwriteExistingFiles="true"
             Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>