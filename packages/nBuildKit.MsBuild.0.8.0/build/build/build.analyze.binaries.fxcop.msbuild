<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Build_Analyze_Binaries_FxCop_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildAnalyzeBinariesFxCop>true</ExistsBuildAnalyzeBinariesFxCop>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\FxCopViaAssemblies.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\FxCopViaAssemblies.msbuild') AND '$(ExistsExtensionsFxCopViaAssemblies)' != 'true' "/>
    <Import Project="$(DirNBuildKitMsBuildExtensions)\FxCopFxCopViaProject.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\FxCopFxCopViaProject.msbuild') AND '$(ExistsExtensionsFxCopViaProject)' != 'true' "/>
    <Import Project="$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolDirectory.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolDirectory.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolDirectory)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_Build_Analyze_Binaries_FxCop_Run"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_FxCop_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_WithProject"
                    Condition="Exists('$(FileProjectFxCop)')" />
        <CallTarget Targets="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_WithAssemblies"
                    Condition="!Exists('$(FileProjectFxCop)') AND '@(FxCopFiles)' != '' " />
        <CallTarget Targets="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_OnError"
                    Condition="!Exists('$(FileProjectFxCop)') AND  '@(FxCopFiles)' == '' " />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_DisplayInfo"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_FxCop_DebugLog">
        <Message Text="Running FxCop ..."
                 Importance="normal" />
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_DebugLog"
            Condition="$(ShouldDisplayDebugLog)"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_FxCop_ReplaceBuildTemplates">
        <Message Text="Project directory structure:"
                 Importance="low" />
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low" />
        <Message Text="The directory containing the NuGet packages is located at:         $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="The FxCop project file is located at:                              $(FileProjectFxCop)"
                 Importance="low"/>
        <Message Text="The FxCop report file is located at:                               $(FileReportFxCopExpanded)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="FxCop command line executable is located at:                       $(ToolsExternalFxCopDir)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_ReplaceBuildTemplates"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <Message Text="Resolving build templates for: $(FileReportFxCop)" />

        <TemplateText Template="$(FileReportFxCop)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="FileReportFxCopExpanded" />
        </TemplateText>
    </Target>

    <PropertyGroup>
        <FileFxCopCmdExe>FxCopCmd.exe</FileFxCopCmdExe>
    </PropertyGroup>
    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_WithProject"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_FxCop_ReplaceBuildTemplates">
        <Error Text="The packages directory does not exist. Cannot search for the FxCop executable."
               Condition="!Exists('$(DirPackages)') AND '$(ToolsExternalFxCopDir)' == 'UNDEFINED' AND '$(ShouldExecute)' == 'true' "/>
        <Error Text="The FxCop project file does not exist. Cannot execute analysis of binaries."
               Condition="!Exists('$(FileProjectFxCop)') AND '$(ShouldExecute)' == 'true' "/>

        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileReportFxCopExpanded)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <SearchPackagesDirectoryForToolDirectory PackagesDir="$(DirPackages)"
                                                 FileToLocate="$(FileFxCopCmdExe)"
                                                 Condition=" '$(ToolsExternalFxCopDir)' == 'UNDEFINED' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalFxCopDir" />
        </SearchPackagesDirectoryForToolDirectory>
        <Message Text="The FxCop directory was found at: $(ToolsExternalFxCopDir)"
                 Condition="Exists('$(ToolsExternalFxCopDir)') AND '$(ShouldExecute)' == 'true' " />
        <Error Text="Could not locate the FxCop executable path. Cannot execute analysis of binaries."
               Condition="!Exists('$(ToolsExternalFxCopDir)') AND '$(ShouldExecute)' == 'true' "/>

        <FxCopViaProject FxCopDir="$(ToolsExternalFxCopDir)"
                         ProjectFile="$(FileProjectFxCop)"
                         OutputFile="$(FileReportFxCopExpanded)"
                         WarningsAsErrors="$(FxCopWarningsAsErrors)"
                         Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_WithAssemblies"
            DependsOnTargets="_nBuildKit_Build_Analyze_Binaries_FxCop_ReplaceBuildTemplates">
        <Error Text="The packages directory does not exist. Cannot search for the FxCop executable."
               Condition="!Exists('$(DirPackages)') AND '$(ToolsExternalFxCopDir)' == 'UNDEFINED' AND '$(ShouldExecute)' == 'true' "/>
        <Error Text="There are no assemblies defined. Cannot execute analysis of binaries."
               Condition=" '@(FxCopFiles)' == '' AND '$(ShouldExecute)' == 'true' "/>

        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileReportFxCopExpanded)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <SearchPackagesDirectoryForToolDirectory PackagesDir="$(DirPackages)"
                                                 FileToLocate="$(FileFxCopCmdExe)"
                                                 Condition=" '$(ToolsExternalFxCopDir)' == 'UNDEFINED' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalFxCopDir" />
        </SearchPackagesDirectoryForToolDirectory>
        <Message Text="The FxCop directory was found at: $(ToolsExternalFxCopDir)"
                 Importance="low"
                 Condition="Exists('$(ToolsExternalFxCopDir)') AND '$(ShouldExecute)' == 'true' " />
        <Error Text="Could not locate the FxCop executable path. Cannot execute analysis of binaries."
               Condition="!Exists('$(ToolsExternalFxCopDir)') AND '$(ShouldExecute)' == 'true' "/>

        <FxCopViaAssemblies FxCopDir="$(ToolsExternalFxCopDir)"
                            OutputFile="$(FileReportFxCopExpanded)"
                            RuleSet="$(FileFxCopRuleSet)"
                            RuleSetDirectory="$(ToolsExternalFxCopDir)\..\Rule Sets"
                            Assemblies="@(FxCopFiles)"
                            ReferenceFiles="@(FxCopReferenceFiles)"
                            ReferenceDirectories="@(FxCopReferenceDirectories)"
                            Dictionary="$(FxCopCustomDictionary)"
                            Culture="$(FxCopCulture)"
                            WarningsAsErrors="$(FxCopWarningsAsErrors)"
                            Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>

    <Target Name="_nBuildKit_Build_Analyze_Binaries_FxCop_Analyze_OnError">
        <Error Text="There is no FxCop project defined and there are no assemblies defined for analysis. Cannot execute analysis of binaries." />
    </Target>
 </Project>
