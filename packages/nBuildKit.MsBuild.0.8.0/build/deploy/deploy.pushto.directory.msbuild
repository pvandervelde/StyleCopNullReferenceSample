<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Deploy_PushTo_Directory_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsDeployPushToDirectory>true</ExistsDeployPushToDirectory>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importdeploysharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importdeploysharedsettings.props') AND '$(ExistsSharedImportDeploySharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_Deploy_PushTo_Directory_Run"
            DependsOnTargets="_nBuildKit_Deploy_PushTo_Directory_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Deploy_PushTo_Directory_Push" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Deploy_PushTo_Directory_DisplayInfo"
            DependsOnTargets="_nBuildKit_Deploy_PushTo_Directory_DebugLog">
        <Message Text="Copying binaries to the remote file location..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Deploy_PushTo_Directory_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="Deploying to: %(PushToDirectorySpecs.Identity)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Deploy_PushTo_Directory_Push"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize"
            Outputs="%(PushToDirectorySpecs.Identity)">
        <Message Text="Resolving build templates for: %(PushToDirectorySpecs.Identity)"
                 Importance="low"/>

        <!-- Process the build templates in the input directories -->
        <TemplateText Template="%(PushToDirectorySpecs.Identity)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="DirPushToSpecs" />
        </TemplateText>

        <!-- Process the build templates in the included files -->
        <TemplateText Template="%(PushToDirectorySpecs.IncludedFiles)"
                      Tokens="@(TemplateTokens)"
                      Condition=" '%(PushToDirectorySpecs.IncludedFiles)' != '' ">
            <Output TaskParameter="Result" PropertyName="FilesPushToIncluded" />
        </TemplateText>

        <!-- Process the build templates in the excluded files -->
        <TemplateText Template="%(PushToDirectorySpecs.ExcludedFiles)"
                      Tokens="@(TemplateTokens)"
                      Condition=" '%(PushToDirectorySpecs.ExcludedFiles)' != '' ">
            <Output TaskParameter="Result" PropertyName="FilesPushToExcluded" />
        </TemplateText>

        <!--
            Create the ItemGroup dynamically because creating an ItemGroup in the target with the dynamically
            created properties doesn't work because the wildcards are not always expanded for some reason.
        -->
        <CreateItem
            Include="$(FilesPushToIncluded.Split(';'))"
            Exclude="$(FilesPushToExcluded.Split(';'))">
           <Output
               TaskParameter="Include"
               ItemName="FilesToPush"/>
        </CreateItem>
        <Error Text="There are no files to be pushed"
               Condition=" '@(FilesToPush)' == '' AND '$(ShouldExecute)' == 'true' "/>

        <MakeDir Directories="$(DirPushToSpecs)"
                 Condition="!Exists('$(DirPushToSpecs)') AND '$(ShouldExecute)' == 'true' " />
        <Copy SourceFiles="@(FilesToPush)"
              DestinationFolder="$(DirPushToSpecs)"
              Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
</Project>